<%- include ('./header.ejs')  %>

<main class="h-full overflow-y-auto">
  <div class="container px-6 mx-auto grid">
    <h2 class="my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200">
      Dashboard
    </h2>

    <!-- With actions -->
    <h4 class="mb-4 text-lg font-semibold text-gray-600 dark:text-gray-300">
      
    </h4>
    <div class="w-full overflow-hidden rounded-lg shadow-xs">
      <div class="w-full overflow-x-auto">
        <table id="data-table" class="w-full whitespace-no-wrap">
          <thead>
            <tr class="text-xs font-semibold tracking-wide text-left text-gray-500 uppercase border-b dark:border-gray-700 bg-gray-50 dark:text-gray-400 dark:bg-gray-800">
              <th class="px-4 py-3">Name</th>
              <th class="px-4 py-3">Phone Number</th>
              <th class="px-4 py-3">Location</th>
              <th class="px-4 py-3">Plan</th>
              <th class="px-4 py-3">Start</th>
              <th class="px-4 py-3">End</th>
            </tr>
          </thead>
<!-- Modal for Editing -->

  </div>
</div>


<tbody class="bg-white divide-y dark:divide-gray-700 dark:bg-gray-800">
  <% dataservice.forEach((data, index) => { %>
    <tr class="text-gray-700 dark:text-gray-400">
      <td class="px-4 py-3"><%= data.name %></td>
      <td class="px-4 py-3"><%= data.phoneNumber %></td>
      <td class="px-4 py-3"><%= data.placelocation %></td>
      <td class="px-4 py-3"><%= data.plan %></td>
      <td class="px-4 py-3"><%= data.startDate.toISOString().split('T')[0] %></td>
      <td class="px-4 py-3"><%= data.endDate.toISOString().split('T')[0] %></td>
      <td class="px-4 py-3">
        <div class="flex items-center space-x-4 text-sm">
          <button class="flex items-center justify-between px-2 py-2 text-sm font-medium leading-5 text-purple-600 rounded-lg dark:text-gray-400 focus:outline-none focus:shadow-outline-gray border border-white"
            aria-label="Edit"
            onclick="populateEditModal('<%- encodeURIComponent(JSON.stringify(data)) %>')"
            data-toggle="modal"
            data-target="#editModal"
          >
            <svg class="w-5 h-5" aria-hidden="true" fill="currentColor" viewBox="0 0 20 20">
              <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z"></path>
            </svg>
            Edit
          </button>
      
          <button
            onclick="deleteData('<%= data._id %>')" 
            class="flex items-center justify-between px-2 py-2 text-sm font-medium leading-5 text-purple-600 rounded-lg dark:text-gray-400 focus:outline-none focus:shadow-outline-gray"
            aria-label="Delete"
          >
            <svg
              class="w-5 h-5"
              aria-hidden="true"
              fill="currentColor"
              viewBox="0 0 20 20"
            >
              <path
                fill-rule="evenodd"
                d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z"
                clip-rule="evenodd"
              ></path>
            </svg>
            Delete
          </button>
        </div>
      </td>
    </tr>
  <% }); %>
</tbody>



        </table>
      </div>
      <!-- Pagination and other table controls -->
    </div>
  </div>

  <form method="post" action="/editsubmit" >
    <div class="modal fade " id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="editModalLabel">Edit Data</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div class="modal-body">
           
    
              <main class="h-full pb-16 overflow-y-auto">
                        <div class="container px-6 mx-auto grid">
                          <h2
                            class="my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200"
                          >
                            Client Data
                          </h2>
                          
                          <!-- General elements -->
                         
                          <div class="px-4 py-3 mb-8 bg-white rounded-lg shadow-md dark:bg-gray-800">
                            <!-- Custom Name Field -->
                            <label class="block text-sm">
                              <span  class="text-gray-700 dark:text-gray-400" >name</span>
                              <input
                               name="editname" id="editname" type="text" class="block w-full mt-1 text-sm dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:text-gray-300 dark:focus:shadow-outline-gray form-input"
                                placeholder="Customer's Name"
                              > 
                            </label>
                          
                            <label class="block mt-4 text-sm">
                              <span class="text-gray-700 dark:text-gray-400">Phone Number</span>
                              <input
                              id="editphoneNumber"
                                  name="editPhonenumber"
                                  type="number"
                                  pattern="[0-9]*"
                                  oninput="this.value = this.value.replace(/[^0-9]/g, '')" 
                                  class="block w-full mt-1 text-sm dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:-gray-300 dark:focus:shadow-outline-gray form-input"
                                  placeholder="Customer's Phone Number"
                              />
                          </label>
                          
                            <!-- Custom Place Location Field -->
                            <label class="block mt-4 text-sm">
                              <span class="text-gray-700 dark:text-gray-400">Place Location</span>
                              <input
                              id="editplace"
                                name="editplace" type="" class="block w-full mt-1 text-sm dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:text-gray-300 dark:focus:shadow-outline-gray form-input"
                                placeholder=
                              />
                            </label>
              
                            <!-- Select Plan Field -->
                            <label class="block mt-4 text-sm">
                              <span class="text-gray-700 dark:text-gray-400">Select Plan</span>
                              <select
                              id="editplan"
                               name="editplan" class="block w-full mt-1 text-sm dark:text-gray-300 dark:border-gray-600 dark:bg-gray-700 form-select focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:focus:shadow-outline-gray"
                              >
                                <option value="3m" selected>3 Months</option>
                                <option value="6m">6 Months</option>
                                <option value="9m">9 Months</option>
                                <option value="1y">1 Year</option>
                              </select>
                            </label>
                          
                            <!-- Date Field -->
                            <label class="block mt-4 text-sm">
                              <span class="text-gray-700 dark:text-gray-400">Start Date</span>
                              <input
                              id="editstartDate"
                                type="date"
                                id="editstartDate"
                                name="editstartDate"
                                class="block w-full mt-1 text-sm dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:text-gray-300 dark:focus:shadow-outline-gray form-input"
                                placeholder="Select Start Date"
                                onchange="updateEndDate()"
                              ></input>
    
                            </label>
              
                            <label class="block mt-4 text-sm">
                              <span class="text-gray-700 dark:text-gray-400">End Date (90 days after start date)</span>
                              <input
                              id="editendDate"
                                type="date"
                                id="editendDate"
                                name="editendDate"
                                class="block w-full mt-1 text-sm dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:text-gray-300 dark:focus:shadow-outline-gray form-input"
                                placeholder="Automatically calculated"
                                readonly
                              />
                            </label>
                          
                            
                          
                            <!-- Comment Field -->
                            <label class="block mt-4 text-sm">
                              <span class="text-gray-700 dark:text-gray-400">Comment</span>
                              <textarea
                              id="editcomment"
                               name="ceditomment" class="block w-full mt-1 text-sm dark:text-gray-300 dark:border-gray-600 dark:bg-gray-700 form-textarea focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:focus:shadow-outline-gray"
                                rows="3"
                                placeholder="Enter any additional comments or details."
                              ></textarea>
                            </label>
                          </div>
                          <button type="submit" name="submit">Submit</button>
                 
                        
                        </div>
                      </main>
                    </div>
                  </div>
             
    
            
          </div>
        </div>
      </form> 
  
</main>





<script>
  function populateEditModal(data) {
    try {
      // Parse the data
      const parsedData = JSON.parse(decodeURIComponent(data));
      console.log('Parsed Data:', parsedData);

      // Check if the required properties exist in the parsed data
      if (!parsedData.hasOwnProperty('name') || !parsedData.hasOwnProperty('phoneNumber')) {
        console.error('Missing required properties in parsed data');
        return;
      }

      // Populate input fields with data
      document.getElementById('editname').value = parsedData.name;
      document.getElementById('editphoneNumber').value = parsedData.phoneNumber;
      document.getElementById('editplace').value = parsedData.placelocation || '';
      document.getElementById('editplan').value = parsedData.plan || '';
      document.getElementById('editstartDate').value = parsedData.startDate ? parsedData.startDate.split('T')[0] : '';
      document.getElementById('editendDate').value = parsedData.endDate ? parsedData.endDate.split('T')[0] : '';
      document.getElementById('editcomment').value = parsedData.comment || '';
    } catch (error) {
      console.log('Error populating edit modal:', error);
    }
  }
</script>

<script>
  function populateEditModal(data) {
    document.getElementById('editName').value = data.name;
    document.getElementById('editPhoneNumber').value = data.phoneNumber;
    // Populate other input fields as needed
  }

  function saveChanges() {
    // Implement saving changes logic here
  }
</script>
<script>
function populateEditModal(data) {
  try {
    // Parse the data
    const parsedData = JSON.parse(decodeURIComponent(data));
    console.log('Parsed Data:', parsedData);

    // Check if the required properties exist in the parsed data
    if (!parsedData.hasOwnProperty('name') || !parsedData.hasOwnProperty('phoneNumber')) {
      console.error('Missing required properties in parsed data');
      return;
    }

    // Populate input fields with data
    document.getElementById('editname').value = parsedData.name;
    document.getElementById('editphoneNumber').value = parsedData.phoneNumber;
    document.getElementById('editplace').value = parsedData.placelocation || '';
    document.getElementById('editplan').value = parsedData.plan || '';
    document.getElementById('editstartDate').value = parsedData.startDate ? parsedData.startDate.split('T')[0] : '';
    document.getElementById('editendDate').value = parsedData.endDate ? parsedData.endDate.split('T')[0] : '';
    document.getElementById('editcomment').value = parsedData.comment || '';
  } catch (error) {
    console.log('Error populating edit modal:', error);
  }
}

 </script>
 
 
 

<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<script>
 function updateEndDate() {
  const startDateInput = document.getElementById('editstartDate'); // Corrected ID
  const endDateInput = document.getElementById('editendDate');
  const planSelect = document.getElementById('editplan'); // Also corrected ID

  if (startDateInput.value && planSelect.value) {
    const startDate = new Date(startDateInput.value);
    const planDuration = planSelect.value;

    let endDate;

    // Parse the plan duration based on the selected option
    switch (planDuration) {
      case '3m':
        endDate = addMonths(startDate, 3);
        break;
      case '6m':
        endDate = addMonths(startDate, 6);
        break;
      case '9m':
        endDate = addMonths(startDate, 9);
        break;
      case '1y':
        endDate = addMonths(startDate, 12);
        break;
      default:
        // Handle unknown plan duration
        console.error('Unknown plan duration:', planDuration);
        return;
    }

    // Format the endDate to 'YYYY-MM-DD' for input type='date'
    const formattedEndDate = endDate.toISOString().split('T')[0];

    endDateInput.value = formattedEndDate;
  }
}

// Helper function to add months to a date
function addMonths(date, months) {
  const newDate = new Date(date);
  newDate.setMonth(newDate.getMonth() + months);
  return newDate;
}

</script>

</body>
</html>